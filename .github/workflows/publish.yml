name: Publish to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use tag)'
        required: false
        default: ''
      test_only:
        description: 'Publish to TestPyPI only'
        required: false
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Set version from tag if not specified
      if: github.event.inputs.version == ''
      run: |
        echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

    - name: Set version from input if specified
      if: github.event.inputs.version != ''
      run: |
        echo "PACKAGE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

    - name: Build package
      run: |
        python -m build
        twine check dist/*

    - name: Publish to TestPyPI
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        twine upload --repository-url https://test.pypi.org/legacy/ dist/*

    - name: Test installation from TestPyPI
      run: |
        python -m venv test_env
        source test_env/bin/activate
        pip install --index-url https://test.pypi.org/simple/ memorial-tree
        python -c "import memorial_tree; print(memorial_tree.__version__)"
        deactivate
        rm -rf test_env

    - name: Publish to PyPI
      if: ${{ !github.event.inputs.test_only }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*